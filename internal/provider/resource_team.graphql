query getTeam($key: String!) {
  team(id: $key) {
    id
    name
    key
    private
    description
    icon
    color
    timezone
    issueOrderingNoPriorityFirst
    groupIssueHistory
    issueSortOrderDefaultToBottom
    autoArchivePeriod
    autoClosePeriod
    triageEnabled
    cyclesEnabled
    cycleStartDay
    cycleDuration
    cycleCooldownTime
    upcomingCycleCount
    cycleIssueAutoAssignStarted
    cycleIssueAutoAssignCompleted
    cycleLockToActive
    issueEstimationType
    issueEstimationAllowZero
    issueEstimationExtended
    defaultIssueEstimate
  }
}

# @genqlient(for: "TeamCreateInput.id", omitempty: true)
# @genqlient(for: "TeamCreateInput.organizationId", omitempty: true)
# @genqlient(for: "TeamCreateInput.description", omitempty: true)
# @genqlient(for: "TeamCreateInput.icon", omitempty: true)
# @genqlient(for: "TeamCreateInput.color", omitempty: true)
# @genqlient(for: "TeamCreateInput.defaultTemplateForMembersId", omitempty: true)
# @genqlient(for: "TeamCreateInput.defaultTemplateForNonMembersId", omitempty: true)
# @genqlient(for: "TeamCreateInput.markedAsDuplicateWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamCreateInput.autoClosePeriod", omitempty: true)
# @genqlient(for: "TeamCreateInput.autoCloseStateId", omitempty: true)
mutation createTeam(
  $input: TeamCreateInput!
) {
  teamCreate(input: $input) {
    team {
      id
      name
      key
      private
      description
      icon
      color
      timezone
      issueOrderingNoPriorityFirst
      groupIssueHistory
      issueSortOrderDefaultToBottom
      autoArchivePeriod
      autoClosePeriod
      triageEnabled
      cyclesEnabled
      cycleStartDay
      cycleDuration
      cycleCooldownTime
      upcomingCycleCount
      cycleIssueAutoAssignStarted
      cycleIssueAutoAssignCompleted
      cycleLockToActive
      issueEstimationType
      issueEstimationAllowZero
      issueEstimationExtended
      defaultIssueEstimate
    }
  }
}

# @genqlient(for: "TeamUpdateInput.key", omitempty: true)
# @genqlient(for: "TeamUpdateInput.description", omitempty: true)
# @genqlient(for: "TeamUpdateInput.icon", omitempty: true)
# @genqlient(for: "TeamUpdateInput.color", omitempty: true)
# @genqlient(for: "TeamUpdateInput.draftWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.startWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.reviewWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.mergeWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.defaultTemplateForMembersId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.defaultTemplateForNonMembersId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.defaultIssueStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.markedAsDuplicateWorkflowStateId", omitempty: true)
# @genqlient(for: "TeamUpdateInput.autoClosePeriod", omitempty: true)
# @genqlient(for: "TeamUpdateInput.autoCloseStateId", omitempty: true)
mutation updateTeam(
  $input: TeamUpdateInput!,
  $id: String!
) {
  teamUpdate(input: $input, id: $id) {
    team {
      id
      name
      key
      private
      description
      icon
      color
      timezone
      issueOrderingNoPriorityFirst
      groupIssueHistory
      issueSortOrderDefaultToBottom
      autoArchivePeriod
      autoClosePeriod
      triageEnabled
      cyclesEnabled
      cycleStartDay
      cycleDuration
      cycleCooldownTime
      upcomingCycleCount
      cycleIssueAutoAssignStarted
      cycleIssueAutoAssignCompleted
      cycleLockToActive
      issueEstimationType
      issueEstimationAllowZero
      issueEstimationExtended
      defaultIssueEstimate
    }
  }
}

mutation deleteTeam($key: String!) {
  teamDelete(id: $key) {
    success
  }
}
