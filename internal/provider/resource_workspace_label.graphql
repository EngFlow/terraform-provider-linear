# @genqlient(for: "IssueLabel.description", pointer: true)
# @genqlient(for: "IssueLabel.color", pointer: true)
# @genqlient(for: "IssueLabel.team", pointer: true)
# @genqlient(for: "IssueLabel.parent", pointer: true)
fragment IssueLabel on IssueLabel {
  id
  name
  description
  color
  parent {
    id
  }
  team {
    id
  }
}

query getLabel($id: String!) {
  issueLabel(id: $id) {
    ...IssueLabel
  }
}

query findWorkspaceLabel($name: String!) {
  issueLabels(filter: {
    name: {
      eq: $name
    }
  }) {
    nodes {
      id
      team {
        id
      }
    }
  }
}

# @genqlient(for: "IssueLabelCreateInput.id", omitempty: true)
# @genqlient(for: "IssueLabelCreateInput.description", pointer: true)
# @genqlient(for: "IssueLabelCreateInput.color", omitempty: true, pointer: true)
# @genqlient(for: "IssueLabelCreateInput.parentId", pointer: true)
# @genqlient(for: "IssueLabelCreateInput.teamId", pointer: true)
mutation createLabel(
  $input: IssueLabelCreateInput!
) {
  issueLabelCreate(input: $input) {
    issueLabel {
      ...IssueLabel
    }
  }
}

# @genqlient(for: "IssueLabelUpdateInput.name", omitempty: true)
# @genqlient(for: "IssueLabelUpdateInput.description", pointer: true)
# @genqlient(for: "IssueLabelUpdateInput.color", omitempty: true, pointer: true)
# @genqlient(for: "IssueLabelUpdateInput.parentId", pointer: true)
mutation updateLabel(
  $input: IssueLabelUpdateInput!,
  $id: String!
) {
  issueLabelUpdate(input: $input, id: $id) {
    issueLabel {
      ...IssueLabel
    }
  }
}

mutation deleteLabel($id: String!) {
  issueLabelDelete(id: $id) {
    success
  }
}
